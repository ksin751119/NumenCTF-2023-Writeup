// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity >=0.7.0 <0.9.0;

interface IExistingStock {
    event Approval(address indexed from, address indexed to, uint256 number);
    event Deposit(address indexed to, uint256 number);
    event Target(address indexed from, bool result);
    event Transfer(address indexed from, address indexed to, uint256 number);
    event Withdraw(address indexed from, uint256 number);

    function Lock() external view returns (bool);

    function allowance(address, address) external view returns (uint256);

    function approve(address to, uint256 number) external returns (bool);

    function balanceOf(address) external view returns (uint256);

    function decimals() external view returns (uint256);

    function flag() external view returns (bool);

    function frequency() external view returns (uint8);

    function isSolved() external view returns (bool);

    function name() external view returns (string memory);

    function owner() external view returns (address);

    function privilegedborrowing(
        uint256 value,
        address secure,
        address target,
        bytes memory data
    ) external;

    function result() external view returns (bool);

    function setflag() external;

    function symbol() external view returns (string memory);

    function totalSupply() external view returns (uint256);

    function transfer(address _to, uint256 _value) external returns (bool);

    function transferFrom(
        address from,
        address to,
        uint256 number
    ) external returns (bool);

    function withdraw(uint256 number) external;
}
